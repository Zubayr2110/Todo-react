[{"/home/hanzo/Desktop/Todo in React/src/index.jsx":"1","/home/hanzo/Desktop/Todo in React/src/App.jsx":"2","/home/hanzo/Desktop/Todo in React/src/reportWebVitals.jsx":"3","/home/hanzo/Desktop/Todo in React/src/redux/store.jsx":"4","/home/hanzo/Desktop/Todo in React/src/components/Todos.jsx":"5","/home/hanzo/Desktop/Todo in React/src/components/Form.jsx":"6","/home/hanzo/Desktop/Todo in React/src/redux/rootReducer.jsx":"7","/home/hanzo/Desktop/Todo in React/src/redux/todoapp/actions/index.jsx":"8","/home/hanzo/Desktop/Todo in React/src/redux/todoapp/reducers/operations.jsx":"9"},{"size":502,"mtime":1701342395016,"results":"10","hashOfConfig":"11"},{"size":1145,"mtime":1701343111907,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1701092434000,"results":"13","hashOfConfig":"11"},{"size":212,"mtime":1701092434000,"results":"14","hashOfConfig":"11"},{"size":1280,"mtime":1701342566045,"results":"15","hashOfConfig":"11"},{"size":1981,"mtime":1701342501537,"results":"16","hashOfConfig":"11"},{"size":179,"mtime":1701342489981,"results":"17","hashOfConfig":"11"},{"size":699,"mtime":1701092434000,"results":"18","hashOfConfig":"11"},{"size":1371,"mtime":1701343168160,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"167ky59",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/home/hanzo/Desktop/Todo in React/src/index.jsx",[],[],"/home/hanzo/Desktop/Todo in React/src/App.jsx",[],[],"/home/hanzo/Desktop/Todo in React/src/reportWebVitals.jsx",[],[],"/home/hanzo/Desktop/Todo in React/src/redux/store.jsx",[],[],"/home/hanzo/Desktop/Todo in React/src/components/Todos.jsx",[],[],"/home/hanzo/Desktop/Todo in React/src/components/Form.jsx",[],[],"/home/hanzo/Desktop/Todo in React/src/redux/rootReducer.jsx",[],[],"/home/hanzo/Desktop/Todo in React/src/redux/todoapp/actions/index.jsx",[],[],"/home/hanzo/Desktop/Todo in React/src/redux/todoapp/reducers/operations.jsx",["48","49"],[],"import { ADD_TODO, DELETE_ALL, REMOVE_TODO, UPDATE_CHECKBOX, UPDATE_TODO } from \"../actions\";\n\nconst initialState=[\n    {id: 1, todo: 'Buy Laptop', completed: false},\n    {id: 2, todo: 'Master Redux', completed: false},\n    {id: 3, todo: 'Watering Plants', completed: true},\n];\n\nexport const operationsReducer=(state=initialState, action)=>{\n    switch(action.type){\n        case ADD_TODO:\n            return [...state, action.payload];\n        case DELETE_ALL:\n            return [];\n        case REMOVE_TODO:\n            const filteredTodos = state.filter((todo)=>todo.id!==action.payload);\n            return filteredTodos;\n        case UPDATE_TODO:\n            let data = action.payload;\n            const updatedArray=[];\n            state.map((item)=>{\n                if(item.id===data.id){\n                    item.id = data.id;\n                    item.todo = data.todo;\n                    item.completed = data.completed;\n                }\n                updatedArray.push(item);\n            })\n            return updatedArray;\n        case UPDATE_CHECKBOX:\n            let todoArray=[];\n            state.map((item)=>{\n                if(item.id===action.payload){\n                    item.completed = !item.completed;\n                }\n                todoArray.push(item);\n            })\n            return todoArray;\n        default: return state;\n    }\n}",{"ruleId":"50","severity":1,"message":"51","line":21,"column":29,"nodeType":"52","messageId":"53","endLine":21,"endColumn":31},{"ruleId":"50","severity":1,"message":"51","line":32,"column":29,"nodeType":"52","messageId":"53","endLine":32,"endColumn":31},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]