{"ast":null,"code":"var _jsxFileName = \"/home/hanzo/Desktop/todoapp-redux (1)/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTodo, handleEditSubmit } from '../redux/todoapp/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Form = _ref => {\n  _s();\n\n  let {\n    editFormVisibility,\n    editTodo,\n    cancelUpdate\n  } = _ref;\n  // dispatch function to dispatch an action\n  const dispatch = useDispatch(); // todo value state for normal add todo form\n\n  const [todoValue, setTodoValue] = useState(''); // state for if someone changes the (to edit) value in update form\n\n  const [editValue, setEditValue] = useState(''); // useEffect is to show the (to edit) value in update form\n\n  useEffect(() => {\n    setEditValue(editTodo.todo);\n  }, [editTodo]); // normal add todo submit\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let date = new Date();\n    let time = date.getTime();\n    let todoObj = {\n      id: time,\n      todo: todoValue,\n      completed: false\n    };\n    setTodoValue('');\n    dispatch(addTodo(todoObj));\n  }; // update form submit\n\n\n  const editSubmit = e => {\n    e.preventDefault();\n    let editedObj = {\n      id: editTodo.id,\n      todo: editValue,\n      completed: false\n    };\n    dispatch(handleEditSubmit(editedObj));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: editFormVisibility === false ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-group custom-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Add your todo-items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-and-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          required: true,\n          value: todoValue,\n          onChange: e => setTodoValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-secondary btn-md\",\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-group custom-form\",\n      onSubmit: editSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Update your todo-items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-and-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          required: true,\n          value: editValue || \"\",\n          onChange: e => setEditValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-secondary btn-md\",\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-md back-btn\",\n        onClick: cancelUpdate,\n        children: \"BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Form, \"KOELNjiZp/ukSaWySW20DsiUYLY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","addTodo","handleEditSubmit","Form","editFormVisibility","editTodo","cancelUpdate","dispatch","todoValue","setTodoValue","editValue","setEditValue","todo","handleSubmit","e","preventDefault","date","Date","time","getTime","todoObj","id","completed","editSubmit","editedObj","target","value"],"sources":["/home/hanzo/Desktop/todoapp-redux (1)/src/components/Form.js"],"sourcesContent":["import React,{useState, useEffect} from 'react'\nimport { useDispatch } from 'react-redux';\nimport { addTodo, handleEditSubmit } from '../redux/todoapp/actions';\n\nexport const Form = ({editFormVisibility, editTodo, cancelUpdate}) => {\n\n  // dispatch function to dispatch an action\n  const dispatch = useDispatch();\n\n  // todo value state for normal add todo form\n  const [todoValue, setTodoValue]=useState('');\n\n  // state for if someone changes the (to edit) value in update form\n  const [editValue, setEditValue]=useState('');\n\n  // useEffect is to show the (to edit) value in update form\n  useEffect(()=>{\n    setEditValue(editTodo.todo);\n  },[editTodo])\n\n  // normal add todo submit\n  const handleSubmit=(e)=>{\n      e.preventDefault();\n      let date = new Date();\n      let time = date.getTime();\n      let todoObj={\n          id: time,\n          todo: todoValue,\n          completed: false\n      }\n      setTodoValue('');\n      dispatch(addTodo(todoObj))\n  }\n\n  // update form submit\n  const editSubmit = (e) =>{\n    e.preventDefault();\n    let editedObj={\n      id: editTodo.id,\n      todo: editValue,\n      completed: false\n    }\n    dispatch(handleEditSubmit(editedObj))\n  }\n\n  return (\n    <>\n      {editFormVisibility===false?(\n        <form className='form-group custom-form' onSubmit={handleSubmit}>\n          <label>Add your todo-items</label>\n          <div className='input-and-btn'>\n              <input type=\"text\" className='form-control' required\n              value={todoValue} onChange={(e)=>setTodoValue(e.target.value)}/>\n              <button type=\"submit\" className='btn btn-secondary btn-md'>ADD</button>\n          </div>\n        </form>\n      ):(\n        <form className='form-group custom-form' onSubmit={editSubmit}>\n          <label>Update your todo-items</label>\n          <div className='input-and-btn'>\n              <input type=\"text\" className='form-control' required\n              value={editValue||\"\"} onChange={(e)=>setEditValue(e.target.value)}/>\n              <button type=\"submit\" className='btn btn-secondary btn-md'>UPDATE</button>\n          </div>\n          <button type=\"button\" className='btn btn-primary btn-md back-btn'\n          onClick={cancelUpdate}>BACK</button>\n        </form>\n      )}\n    </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,EAAkBC,gBAAlB,QAA0C,0BAA1C;;;AAEA,OAAO,MAAMC,IAAI,GAAG,QAAkD;EAAA;;EAAA,IAAjD;IAACC,kBAAD;IAAqBC,QAArB;IAA+BC;EAA/B,CAAiD;EAEpE;EACA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAHoE,CAKpE;;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA0BX,QAAQ,CAAC,EAAD,CAAxC,CANoE,CAQpE;;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC,CAToE,CAWpE;;EACAC,SAAS,CAAC,MAAI;IACZY,YAAY,CAACN,QAAQ,CAACO,IAAV,CAAZ;EACD,CAFQ,EAEP,CAACP,QAAD,CAFO,CAAT,CAZoE,CAgBpE;;EACA,MAAMQ,YAAY,GAAEC,CAAD,IAAK;IACpBA,CAAC,CAACC,cAAF;IACA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;IACA,IAAIC,IAAI,GAAGF,IAAI,CAACG,OAAL,EAAX;IACA,IAAIC,OAAO,GAAC;MACRC,EAAE,EAAEH,IADI;MAERN,IAAI,EAAEJ,SAFE;MAGRc,SAAS,EAAE;IAHH,CAAZ;IAKAb,YAAY,CAAC,EAAD,CAAZ;IACAF,QAAQ,CAACN,OAAO,CAACmB,OAAD,CAAR,CAAR;EACH,CAXD,CAjBoE,CA8BpE;;;EACA,MAAMG,UAAU,GAAIT,CAAD,IAAM;IACvBA,CAAC,CAACC,cAAF;IACA,IAAIS,SAAS,GAAC;MACZH,EAAE,EAAEhB,QAAQ,CAACgB,EADD;MAEZT,IAAI,EAAEF,SAFM;MAGZY,SAAS,EAAE;IAHC,CAAd;IAKAf,QAAQ,CAACL,gBAAgB,CAACsB,SAAD,CAAjB,CAAR;EACD,CARD;;EAUA,oBACE;IAAA,UACGpB,kBAAkB,KAAG,KAArB,gBACC;MAAM,SAAS,EAAC,wBAAhB;MAAyC,QAAQ,EAAES,YAAnD;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,eAAf;QAAA,wBACI;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAC,cAA7B;UAA4C,QAAQ,MAApD;UACA,KAAK,EAAEL,SADP;UACkB,QAAQ,EAAGM,CAAD,IAAKL,YAAY,CAACK,CAAC,CAACW,MAAF,CAASC,KAAV;QAD7C;UAAA;UAAA;UAAA;QAAA,QADJ,eAGI;UAAQ,IAAI,EAAC,QAAb;UAAsB,SAAS,EAAC,0BAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAUC;MAAM,SAAS,EAAC,wBAAhB;MAAyC,QAAQ,EAAEH,UAAnD;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,eAAf;QAAA,wBACI;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAC,cAA7B;UAA4C,QAAQ,MAApD;UACA,KAAK,EAAEb,SAAS,IAAE,EADlB;UACsB,QAAQ,EAAGI,CAAD,IAAKH,YAAY,CAACG,CAAC,CAACW,MAAF,CAASC,KAAV;QADjD;UAAA;UAAA;UAAA;QAAA,QADJ,eAGI;UAAQ,IAAI,EAAC,QAAb;UAAsB,SAAS,EAAC,0BAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAOE;QAAQ,IAAI,EAAC,QAAb;QAAsB,SAAS,EAAC,iCAAhC;QACA,OAAO,EAAEpB,YADT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EAXJ,iBADF;AAyBD,CAlEM;;GAAMH,I;UAGMH,W;;;KAHNG,I"},"metadata":{},"sourceType":"module"}